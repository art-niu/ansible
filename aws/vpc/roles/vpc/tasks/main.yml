---
# Full creation example with subnets and optional availability zones.
# The absence or presence of subnets deletes or creates them respectively.
- name: load vars from globe role
  include_vars: 
    file: "{{ playbook_dir }}/roles/global/vars/main.yml"

- name: create a VPC with dedicated tenancy and a couple of tags
  ec2_vpc_net:
    name: "{{ project_name }}-{{ env }}-vpc"
    cidr_block: "{{ cidr_block }}"
    region: "{{ region_name }}"
    tags:
      env: "{{ env }}"
      project: "{{ project_name }}"
    tenancy: "{{ tenancy }}"
  register: vpcnet

- 
  debug: 
    msg: "{{ vpcnet.vpc }}"

- name: create subnets
  ec2_vpc_subnet:
    #name: "{{ project_name }}-{{ env }}"     # not supported as of 06/21/2020
    state: present
    vpc_id: "{{ vpcnet.vpc.id }}"
    cidr: "{{ item.cidr }}"
    az: "{{ item.az }}"
    region: "{{ region_name }}"
    tags: "{{ item.resource_tags }}"
  with_items: 
    "{{ subnetworks }}"
  register: subnets

-
  debug:
    msg: "{{ subnets }}"

- name: create internet gateway per vpc
  ec2_vpc_igw:
    vpc_id: "{{ vpcnet.vpc.id }}"
    state: present
  register: igw

- name: Set up public subnet route tables
  ec2_vpc_route_table:
    vpc_id: "{{ vpcnet.vpc.id }}"
    region: "{{ region_name }}"
    tags:
      Name: "{{ item.name }}-{{ item.az }}"
    subnets:
      "{{ item.subnets }}"
    routes:
      - dest: "{{ item.dest }}"
        gateway_id: "{{ igw.gateway_id }}"
  with_items:
    "{{ public_route_tables }}"
  register: public_rt

- 
  debug:
    msg: "{{ public_rt }}"

# one nat gateway per public subnet
- name: Create new nat gateway and allocate new EIP if a nat gateway does not yet exist in the subnet.
  ec2_vpc_nat_gateway:
    state: present
    subnet_id: "{{ item.route_table.associations[0].subnet_id }}"
    wait: yes
    region: "{{ region_name }}"
    if_exist_do_not_create: true
  with_items:
     "{{ public_rt.results }}" 
  register: ngw

- 
  debug:
    msg: "{{ ngw }}"

- name: Set up private subnet route tables
  vars:
    jmesquery: "results[?item.item.az=='{{ item.az }}'].nat_gateway_id"
  ec2_vpc_route_table:
    vpc_id: "{{ vpcnet.vpc.id }}"
    region: "{{ region_name }}"
    tags:
      Name: "{{ item.name }}-{{ item.az }}"
    subnets:
      "{{ item.subnets }}"
    routes:
      - dest: "{{ item.dest }}"
        gateway_id: "{{ ngw | json_query(jmesquery) | first }}"       # first to pick the first and only one element from list.
  with_items:
    "{{ private_route_tables }}"
  register: private_rt

